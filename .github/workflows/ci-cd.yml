name: Wedding Website CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    name: Backend Tests (Laravel)
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: backend/vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    
    - name: Install dependencies
      working-directory: ./backend
      run: composer install --prefer-dist --no-progress
    
    - name: Create .env file
      working-directory: ./backend
      run: |
        cp .env.example .env
        sed -i 's|DB_CONNECTION=mysql|DB_CONNECTION=sqlite|' .env
        sed -i 's|DB_DATABASE=wedding_website|DB_DATABASE=/home/runner/work/Weeding/Weeding/backend/database/database.sqlite|' .env
    
    - name: Create Database
      working-directory: ./backend
      run: |
        touch database/database.sqlite
        
    - name: Generate key
      working-directory: ./backend
      run: php artisan key:generate
    
    - name: Directory Permissions
      working-directory: ./backend
      run: chmod -R 755 storage bootstrap/cache
    
    - name: Run Migrations
      working-directory: ./backend
      run: php artisan migrate --force
    
    - name: Run Tests
      working-directory: ./backend
      run: php artisan test
    
    - name: Security Audit
      working-directory: ./backend
      run: composer audit --no-dev
      continue-on-error: true

  frontend-tests:
    runs-on: ubuntu-latest
    name: Frontend Tests (Next.js)
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run linter
      working-directory: ./frontend
      run: npm run lint
    
    - name: Build application
      working-directory: ./frontend
      run: npm run build
    
    - name: Run tests
      working-directory: ./frontend
      run: npm test
    
    - name: Security Audit
      working-directory: ./frontend
      run: npm audit --audit-level=moderate
      continue-on-error: true

  docker-hub-deployment:
    runs-on: ubuntu-latest
    name: Deploy to Docker Hub
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Trigger Docker Hub deployment
      run: |
        echo "ðŸš€ Triggering Docker Hub deployment workflow..."
        echo "Backend and frontend images will be built and pushed to Docker Hub"
        echo "See docker-hub-deploy.yml workflow for detailed deployment process"